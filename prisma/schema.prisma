// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  CLIENT
  PROFESSIONAL
}

model Appointment {
  id Int @id @default(autoincrement())
  datetime DateTime
  status String @default("scheduled")
  userId String
  user User @relation(fields: [userId], references: [id])
  serviceId Int
  service Service @relation(fields: [serviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Service {
  id Int @id @default(autoincrement())
  name String
  availabilities availability[]
  description String
  appointment Appointment[]
}

model User {
  id String @id @default(cuid())
  username  String 
  email String @unique
  password  String
  phone String?
  role      Role     @default(CLIENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  appointment Appointment[]
}

model availability {
  id String @id @default(cuid())
  datetime DateTime
  endTime DateTime
  isBlocked Boolean @default(false)
  isBooked Boolean @default(false)
  serviceId Int
  service Service @relation(fields: [serviceId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



